//@formatter:off
/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package me.him188.ani.app.torrent.anitorrent.binding;

public class peer_info_t {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected peer_info_t(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(peer_info_t obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(peer_info_t obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        anitorrentJNI.delete_peer_info_t(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setTorrent_handle_id(long value) {
    anitorrentJNI.peer_info_t_torrent_handle_id_set(swigCPtr, this, value);
  }

  public long getTorrent_handle_id() {
    return anitorrentJNI.peer_info_t_torrent_handle_id_get(swigCPtr, this);
  }

  public void setPeer_id(CharVector value) {
    anitorrentJNI.peer_info_t_peer_id_set(swigCPtr, this, CharVector.getCPtr(value), value);
  }

  public CharVector getPeer_id() {
    long cPtr = anitorrentJNI.peer_info_t_peer_id_get(swigCPtr, this);
    return (cPtr == 0) ? null : new CharVector(cPtr, false);
  }

  public void setClient(String value) {
    anitorrentJNI.peer_info_t_client_set(swigCPtr, this, value);
  }

  public String getClient() {
    return anitorrentJNI.peer_info_t_client_get(swigCPtr, this);
  }

  public void setIp_addr(String value) {
    anitorrentJNI.peer_info_t_ip_addr_set(swigCPtr, this, value);
  }

  public String getIp_addr() {
    return anitorrentJNI.peer_info_t_ip_addr_get(swigCPtr, this);
  }

  public void setIp_port(int value) {
    anitorrentJNI.peer_info_t_ip_port_set(swigCPtr, this, value);
  }

  public int getIp_port() {
    return anitorrentJNI.peer_info_t_ip_port_get(swigCPtr, this);
  }

  public void setProgress(float value) {
    anitorrentJNI.peer_info_t_progress_set(swigCPtr, this, value);
  }

  public float getProgress() {
    return anitorrentJNI.peer_info_t_progress_get(swigCPtr, this);
  }

  public void setTotal_download(long value) {
    anitorrentJNI.peer_info_t_total_download_set(swigCPtr, this, value);
  }

  public long getTotal_download() {
    return anitorrentJNI.peer_info_t_total_download_get(swigCPtr, this);
  }

  public void setTotal_upload(long value) {
    anitorrentJNI.peer_info_t_total_upload_set(swigCPtr, this, value);
  }

  public long getTotal_upload() {
    return anitorrentJNI.peer_info_t_total_upload_get(swigCPtr, this);
  }

  public void setFlags(long value) {
    anitorrentJNI.peer_info_t_flags_set(swigCPtr, this, value);
  }

  public long getFlags() {
    return anitorrentJNI.peer_info_t_flags_get(swigCPtr, this);
  }

  public peer_info_t() {
    this(anitorrentJNI.new_peer_info_t(), true);
  }

}

//@formatter:on